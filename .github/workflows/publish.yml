name: Publish Extension

on:
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        # Need to fetch history for proper version bumping and committing
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
    
    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      run: npm ci
    
    # Update version to match release tag
    - name: Update version in package.json
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        VERSION=${VERSION#v}
        # If version in package.json doesn't match the tag, update it
        npm version $VERSION --no-git-tag-version
        echo "New version: $(grep -m1 version package.json | cut -d\" -f4)"
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Build extension
      run: npm run compile
    
    - name: Package extension
      run: npm run package
    
    - name: Publish to Visual Studio Marketplace
      uses: HaaLeo/publish-vscode-extension@v1
      with:
        pat: ${{ secrets.VSCE_PAT }}
        registryUrl: https://marketplace.visualstudio.com
        packagePath: "./out/slidev-copilot-${{ github.event.release.tag_name }}.vsix"
    
    # Bump patch version for next development cycle
    - name: Bump patch version for next development cycle
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'github-actions@github.com'
        npm version patch --no-git-tag-version
        NEW_VERSION=$(grep -m1 version package.json | cut -d\" -f4)
        echo "Bumped version to $NEW_VERSION for next development cycle"
        git add package.json
        git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
        git push